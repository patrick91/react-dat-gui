{"version":3,"sources":["../../src/components/DatNumber.jsx"],"names":["toNumber","value","float","parseFloat","isNaN","DatNumber","props","context","handleChange","bind","handleFocus","handleBlur","handleKeyDown","handleSliderUpdate","setState","getValue","nextProps","applyConstraints","data","path","min","max","step","hasMin","hasMax","hasStep","isMin","isMax","Math","round","event","target","document","addEventListener","removeEventListener","window","getSelection","removeAllRanges","update","key","keyCode","which","state","isLive","liveUpdate","_onUpdateValue","onUpdate","width","label","labelWidth","labelText","hasSlider","controlsWidth","inputWidth","sliderWidth","renderSlider","Component","propTypes","number","object","string","bool","func","Slider","handleMouseDown","handleMouseMove","handleMouseUp","pageX","preventDefault","rect","findDOMNode","getBoundingClientRect","x","left","w","right","widthBackground","style","backgroundSize","handleClick","oneOfType"],"mappings":"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","file":"DatNumber.js","sourcesContent":["import cx from 'classnames';\nimport clamp from 'lodash.clamp';\nimport result from 'lodash.result';\nimport isFinite from 'lodash.isfinite';\nimport isString from 'lodash.isstring';\nimport React, { PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction toNumber(value) {\n    const float = parseFloat(value);\n    return isNaN(float) ? 0 : float;\n}\n\nclass DatNumber extends React.Component {\n\n    static propTypes = {\n        min: PropTypes.number,\n        max: PropTypes.number,\n        step: PropTypes.number,\n        data: PropTypes.object,\n        path: PropTypes.string,\n        label: PropTypes.string,\n        labelWidth: PropTypes.number,\n        liveUpdate: PropTypes.bool,\n        onUpdate: PropTypes.func,\n        _onUpdateValue: PropTypes.func,\n    };\n\n    constructor(props, context) {\n        super(props, context);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleFocus = this.handleFocus.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleSliderUpdate = this.handleSliderUpdate.bind(this);\n    }\n\n    componentWillMount() {\n        this.setState({\n            value: this.getValue()\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: this.getValue(nextProps)\n        });\n    }\n\n    getValue(props = this.props) {\n        return this.applyConstraints(result(props.data, props.path));\n    }\n\n    applyConstraints(value) {\n        const { min, max, step } = this.props;\n        const [ hasMin, hasMax, hasStep ] = [ isFinite(min), isFinite(max), isFinite(step) ];\n        let [ isMin, isMax ] = [ false, false ];\n        value = toNumber(value);\n        if (hasMin && value <= min) {\n            value = min;\n            isMin = true;\n        }\n        if (hasMax && value >= max) {\n            value = max;\n            isMax = true;\n        }\n        if (!isMin && !isMax) {\n            if (hasStep && step !== 0) {\n                value = Math.round(value / step) * step;\n            }\n        }\n        return value;\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleFocus(event) {\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleBlur(event) {\n        document.removeEventListener('keydown', this.handleKeyDown);\n        window.getSelection().removeAllRanges();\n        const value = this.applyConstraints(event.target.value);\n        this.setState({ value }, () => {\n            this.update();\n        });\n    }\n\n    handleKeyDown(event) {\n        const key = event.keyCode || event.which;\n        if (key === 13) {\n            const value = this.applyConstraints(this.state.value);\n            this.setState({ value }, () => {\n                this.update();\n            });\n        }\n    }\n\n    handleSliderUpdate(value, isLive) {\n        value = this.applyConstraints(value);\n        this.setState({ value }, () => {\n            if (!isLive || this.props.liveUpdate) {\n                this.update();\n            }\n        });\n    }\n\n    update() {\n        const { value } = this.state;\n        this.props._onUpdateValue && this.props._onUpdateValue(this.props.path, value);\n        this.props.onUpdate && this.props.onUpdate(value);\n    }\n\n    renderSlider(width) {\n        return (\n            <Slider\n                value={this.state.value}\n                min={this.props.min}\n                max={this.props.max}\n                width={width}\n                onUpdate={this.handleSliderUpdate} />\n        );\n    }\n\n    render() {\n        const { min, max, path, label, labelWidth } = this.props;\n        const labelText = isString(label) ? label : path;\n        const hasSlider = isFinite(min) && isFinite(max);\n        const controlsWidth = 100 - labelWidth;\n        const inputWidth = hasSlider ? Math.round(controlsWidth / 3) : controlsWidth;\n        const sliderWidth = controlsWidth - inputWidth;\n        return (\n            <li className=\"cr number\">\n                <label>\n                    <span className=\"label-text\" style={{ width: `${labelWidth}%` }}>{labelText}</span>\n                    {hasSlider ? this.renderSlider(sliderWidth) : null}\n                    <input\n                        type=\"text\"\n                        inputMode=\"numeric\"\n                        value={this.state.value}\n                        style={{ width: `${inputWidth}%` }}\n                        onChange={this.handleChange}\n                        onFocus={this.handleFocus}\n                        onBlur={this.handleBlur} />\n                </label>\n            </li>\n        );\n    }\n\n}\n\nclass Slider extends React.Component {\n\n    static propTypes = {\n        value: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n        min: PropTypes.number,\n        max: PropTypes.number,\n        width: PropTypes.number,\n        onUpdate: PropTypes.func,\n    };\n\n    constructor(props, context) {\n        super(props, context);\n        this.handleMouseDown = this.handleMouseDown.bind(this);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n    }\n\n    componentWillMount() {\n        this.setState({\n            value: toNumber(this.props.value)\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: toNumber(nextProps.value)\n        });\n    }\n\n    handleMouseDown(event) {\n        this.update(event.pageX);\n        window.addEventListener('mousemove', this.handleMouseMove);\n        window.addEventListener('mouseup', this.handleMouseUp);\n    }\n\n    handleMouseMove(event) {\n        this.update(event.pageX);\n        event.preventDefault();\n    }\n\n    handleMouseUp(event) {\n        this.update(event.pageX, false);\n        window.removeEventListener('mousemove', this.handleMouseMove);\n        window.removeEventListener('mouseup', this.handleMouseUp);\n    }\n\n    handleClick(event) {\n        // do not focus input field on slider click\n        event.preventDefault();\n    }\n\n    update(pageX, isLive = true) {\n        const { min, max, onUpdate } = this.props;\n        const rect = ReactDOM.findDOMNode(this).getBoundingClientRect();\n        const x = pageX - rect.left;\n        const w = rect.right - rect.left;\n        const value = min + clamp(x / w, 0, 1) * (max - min);\n        this.setState({ value }, () => {\n            onUpdate(value, isLive);\n        });\n    }\n\n    render() {\n        const { min, max, width } = this.props;\n        const widthBackground = clamp((this.state.value - min) * 100 / (max - min), 0, 100);\n        const style = {\n            width: `${width}%`,\n            backgroundSize: `${widthBackground}% 100%`\n        };\n        return (\n            <span\n                className=\"slider\"\n                style={style}\n                onClick={this.handleClick}\n                onMouseDown={this.handleMouseDown} />\n        );\n    }\n}\n\nexport default DatNumber;\n"]}